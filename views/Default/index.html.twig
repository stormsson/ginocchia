{% extends "layout.html.twig" %}

{% block head %}
    <script>
        // This is called with the results from from FB.getLoginStatus().
        function statusChangeCallback(response) {
            console.log('statusChangeCallback');
            console.log(response);
            // The response object is returned with a status field that lets the
            // app know the current login status of the person.
            // Full docs on the response object can be found in the documentation
            // for FB.getLoginStatus().
            if (response.status === 'connected') {
                // Logged into your app and Facebook.
                checkServerAuth(response.authResponse.accessToken);
            }
        }

        // This function is called when someone finishes with the Login
        // Button.  See the onlogin handler attached to it in the sample
        // code below.
        function checkLoginState() {
            FB.getLoginStatus(function(response) {
                statusChangeCallback(response);
            });
        }

        window.fbAsyncInit = function() {
            FB.init({
                appId      : '1433159156980399',
                cookie     : true,  // enable cookies to allow the server to access
                                    // the session
                xfbml      : true,  // parse social plugins on this page
                version    : 'v2.2' // use version 2.2
            });

            // Now that we've initialized the JavaScript SDK, we call
            // FB.getLoginStatus().  This function gets the state of the
            // person visiting this page and can return one of three states to
            // the callback you provide.  They can be:
            //
            // 1. Logged into your app ('connected')
            // 2. Logged into Facebook, but not your app ('not_authorized')
            // 3. Not logged into Facebook and can't tell if they are logged into
            //    your app or not.
            //
            // These three cases are handled in the callback function.
        };

        // Load the SDK asynchronously
        (function(d, s, id) {
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) return;
            js = d.createElement(s); js.id = id;
            js.src = "//connect.facebook.net/en_US/sdk.js";
            fjs.parentNode.insertBefore(js, fjs);
        }(document, 'script', 'facebook-jssdk'));

        //effettua il check dell'autenticazione lato server. I casi sono i seguenti:
        //1) l'utente esiste già autenticato nell'app
        //2) l'utente non è stato autenticato
        function checkServerAuth(accessToken) {
            console.log('Welcome!  Fetching your information.... ');
            FB.api('/me', function(response) {
                console.log('Successful login for: ' + response.name);
                // call ajax
                jQuery.ajax({
                    url:"/fb-login",
                    type:'POST',
                    data:'facebook_access_token='+accessToken,
                    success:function(results) {
                        if(results) {
                            console.log(results);
                            $('#status').html('SEI LOGGATO!');
                        }
                    }
                });
            });
        }
    </script>
{% endblock %}


{% block content %}
    <h1>Sono state date <span id="counter">{{ count }}</span> ginocchiate </h1>
<br/><br/>
    <a href="{{ app.url_generator.generate('homepage') }}">HOME</a>
    <br/><br/>
    <a href="{{ app.url_generator.generate('history') }}">History</a><br/><br/>

    <a href="#" id="ahi">Anche io :( </a>


    <div id="supercounter">
    	<div id="digit_0">
    		<span>0</span>
    		<span>1</span>
    		<span>2</span>
    		<span>3</span>
    		<span>4</span>
    		<span>5</span>
    		<span>6</span>
    		<span>7</span>
    		<span>8</span>
    		<span>9</span>
    	</div>
    	<div id="digit_1">
    		<span>0</span>
    		<span>1</span>
    		<span>2</span>
    		<span>3</span>
    		<span>4</span>
    		<span>5</span>
    		<span>6</span>
    		<span>7</span>
    		<span>8</span>
    		<span>9</span>
    	</div>
    	<div id="digit_2">
    		<span>0</span>
    		<span>1</span>
    		<span>2</span>
    		<span>3</span>
    		<span>4</span>
    		<span>5</span>
    		<span>6</span>
    		<span>7</span>
    		<span>8</span>
    		<span>9</span>
    	</div>
    	<div id="digit_3">
    		<span>0</span>
    		<span>1</span>
    		<span>2</span>
    		<span>3</span>
    		<span>4</span>
    		<span>5</span>
    		<span>6</span>
    		<span>7</span>
    		<span>8</span>
    		<span>9</span>
    	</div>
    </div>



    <script>
    function pad(n, width, z) {
	  z = z || '0';
	  n = n + '';
	  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;
	}

    function doAnimation(count) {
        var supercounter_str = pad(count,4);

        for (var i = 0; i < supercounter_str.length; i++) {
            //console.log(supercounter_str.charAt(i));
            var altezza = -(80*supercounter_str.charAt(i));
            $('#digit_' + i).animate({'top': altezza + 'px'},1000);

        }
    }

    $(function(){
        doAnimation({{count}});

        $('#ahi').on('click',function(){
            $.ajax('{{ app.url_generator.generate('post_count') }}',{
                type:'POST',
                success: function(data, textStatus, jqXHR) {
                    $('#counter').html(data['count']);
                    doAnimation(data['count']);

                }

            }
            );
        });
    });
    </script>

    <div id="login-box">
        <fb:login-button id="fbLogin" scope="public_profile,email" onlogin="checkLoginState();">
        </fb:login-button>

        <div id="status">
        </div>

        <a href="{{ app.url_generator.generate('fb_logout') }}">Logout</a>
    </div>

{% endblock %}

